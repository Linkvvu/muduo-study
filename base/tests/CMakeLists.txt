link_libraries(muduo)

set(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/unit_tests)
message(STATUS ${EXECUTABLE_OUTPUT_PATH})
add_executable(Timestamp_unittest Timestamp_unittest.cpp)
add_executable(Exception_unittest Exception_unittest.cpp)
add_executable(Thread_unittest Thread_unittest.cpp)
add_executable(countdownLatch_unittest1 countdownLatch_unittest1.cpp)
add_executable(countdownLatch_unittest2 countdownLatch_unittest2.cpp)
add_executable(blockingQueue_unittest blockingQueue_unittest.cpp)
add_executable(blockingQueue-bench_unittest blockingQueue-Bench_unittest.cpp)
add_executable(boundedBlockingQueue_unittest boundedBlockingQueue_unittest.cpp)
add_executable(threadpool_unittest threadpool_unittest.cpp)
add_executable(singleton_unittest singleton_unittest.cpp)
add_executable(threadLocal_unittest threadLocal_unittest.cpp)
add_executable(singletonThreadLocal_unittest singletonThreadLocal_unittest.cpp)
add_executable(logging_unittest logging_unittest.cpp)
add_executable(logFile_unittest logFile_unittest.cpp)
# add_executable(test test.cpp)

if(BOOSTTEST_LIBRARY)
	message(STATUS boost-test-ready)
    add_executable(logStream_unittest logStream_unittest.cpp)
    target_link_libraries(logStream_unittest boost_unit_test_framework)
endif(BOOSTTEST_LIBRARY)
